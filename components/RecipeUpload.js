import { css } from '@emotion/react';
import Head from 'next/head';
import { useState } from 'react';

export default function RecipeUpload(props) {
  const recipeInstructionsStyles = css`
    width: 800px;
    height: 300px;
  `;

  const [recipeInstructions, setRecipeInstructions] = useState('');

  const [ingredients, setIngredients] = useState([]);

  function addAlmondMealToIngredientsNEW(event) {
    console.log('event', event);
    setAlmondMeal(event.currentTarget.value);

    const id = { id: 1 };
    setIngredients([...ingredients, id]);

    // if (ingredients !== []) {
    //   const filteredIngredient = ingredients.filter((ingredient) => {
    //     ingredient.id === id;
    //   });
    // console.log('ingredients[0].id', ingredients[0].id);
    // console.log('filteredIngredient', filteredIngredient);
    // }
    // const findIngredient = ingredients.filter((ingredient) => {
    //   ingredient.id === id;
    //   return findIngredient;
    // });

    // if (findIngredient) {
    //   setIngredients(
    //     ingredients.filter((ingredient) => {
    //       ingredient.id !== id;
    //     }),
    //   );
    //   return ingredients;
    // }

    if (ingredients[0]) {
      setIngredients([]);
    }

    if (ingredients[ingredients.length - 1]) {
      setIngredients(ingredients.pop());
    }
  }

  function addAlmondMealToIngredients(event) {
    setAlmondMeal(event.currentTarget.checked);
    const id = { id: 1 };
    setIngredients([...ingredients, id]);
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div>
          <h4>Recipe Name</h4>

          <label>
            Title
            <input />
          </label>
        </div>
        <div>
          <h3>Chose Your Ingredients</h3>

          {props.ingredients.map((ingredient, index) => {
            return (
              <label>
                {ingredient.name}
                <input type="checkbox" />
              </label>
            );
          })}

          <div>
            <h4>Instruction (max. 1000 chars)</h4>
            <input
              css={recipeInstructionsStyles}
              value={recipeInstructions}
              onChange={(event) => {
                setRecipeInstructions(event.currentTarget.value);
              }}
            />
          </div>
        </div>
      </main>

      <footer></footer>
    </div>
  );
}
